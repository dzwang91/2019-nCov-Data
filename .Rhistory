library(ggplot2)
library(ggplot2)
ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
pars
:w
pars
which.max(pars$loglike)
pars[1952,]
?R0::generation.time
fit
par <- c(7.5,3.4)
par
GT <- R0::generation.time("gamma", par,truncate = 100);
Gt
GT
?R0::generation.time
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
head(data)
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
?data
data
head(data)
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
head(data)
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
setwd("~/Dropbox/wuhan/2019-nCov-Data")
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
head(data)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
head(data)
strsplit(as.character("06-Jan to 07-Jan"), "to")[[1]]
temp <- strsplit(as.character("06-Jan to 07-Jan"), "to")[[1]]
temp
temp[1]
strsplit(as.character(), "to")[[1]]
strsplit(as.character(""), "to")[[1]]
length(strsplit(as.character(""), "to")[[1]])
date.process(temp)
head(data)
data[7,]
data[5,]
GT
data <- data[7,]
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
loglike <- 0
i <- 7
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
loglike <- 0
min.incub <- symptom[i] - infected_last[i]
data <- data[7,]
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
min.incub <- data$Symptom - data$Infected_last
min.incub
max.incub <- data$Symptom - data$Infected_first
max.incub
log(sum(GT$GT[1 +(min.incub):(max.incub)]))
GT$GT[1 +(min.incub):(max.incub)]
GT
?R0::generation.time
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
pars$loglike <- apply(pars, 1, myfun)
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
pars$loglike
which.max(pars$loglike)
## print the MLE to terminal
print(pars[which.max(pars$loglike),])
?optim
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
?optim
print(fit)
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
- infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
print(fit)
## print the MLE to terminal
print(pars[which.max(pars$loglike),])
print(fit)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
p1
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
case72$Infected_first <- date.process("Jan 15")
case72$Infected_last <- data.process("Jan 21")
case72$Infected_last <- date.process("Jan 21")
case72
head(data)
case72$Infected_first <- date.process("Jan-15")
case72$Infected_last <- date.process("Jan-21")
case72
data.process("Jan-15")
date.process("Jan-15")
date.process("09-Jan")
case72$Infected_first <- date.process("15-Jan")
case72$Infected_last <- date.process("21-Jan")
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
case72$Infected_first <- date.process("15-Jan")
case72$Infected_last <- date.process("21-Jan")
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
case72$Infected_first <- date.process("15-Jan")
case72$Infected_last <- date.process("21-Jan")
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
case72$Infected_first <- date.process("15-Jan")
case72$Infected_last <- date.process("21-Jan")
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
data <- rbind(data, case72)
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
data[49,]
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
# case72$Infected_first <- date.process("15-Jan")
# case72$Infected_last <- date.process("21-Jan")
# data <- rbind(data, case72)
## Only consider cases with known symptom onset, arrived on or before
##January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
data
data[49,]
dim(data)
data$Case
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
# case72$Infected_first <- date.process("15-Jan")
# case72$Infected_last <- date.process("21-Jan")
# data <- rbind(data, case72)
## Only consider cases with known symptom onset, arrived on or before January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
source("functions.R")
data <- read.table("Feb5 - In China.tsv", sep = "\t", header = TRUE)
data$Confirmed <- date.process(data$Confirmed)
data$Arrived <- date.process(data$Arrived)
data$Symptom <- date.process(data$Symptom)
data$Initial <- date.process(data$Initial)
data$Hospital <- date.process(data$Hospital)
case72 <- data[72,]
data <- data[-72, ] # Don't know how to parse this infected date yet
data <- parse.infected(data)
case72$Infected_first <- date.process("15-Jan")
case72$Infected_last <- date.process("21-Jan")
data <- rbind(data, case72)
## Only consider cases with known symptom onset, arrived on or before January 23
data <- subset(data, !is.na(Symptom))
data <- subset(data, Arrived <= 23+31)
data <- subset(data, !(is.na(Arrived) & Infected_first == 1 & Infected_last == Symptom)) # remove cases with no information
#' Compute the likelihood
#'
#' GT is a discretized distribution for the generation time
#'
infection.likelihood <- function(symptom, infected_first, infected_last, GT) {
loglike <- 0
for (i in 1:nrow(data)) {
min.incub <- symptom[i] - infected_last[i]
max.incub <- symptom[i] - infected_first[i]
loglike <- loglike + log(sum(GT$GT[1 +(min.incub):(max.incub)]))
}
loglike
}
myfun <- function(par) {
GT <- R0::generation.time("gamma", par,truncate = 100);
infection.likelihood(data$Symptom, data$Infected_first, data$Infected_last, GT)
}
fit <- optim(c(7.5, 3.4), myfun, control = list(fnscale = -1))
print(fit)
pars <- expand.grid(mean = seq(5, 15, 0.1), sd = seq(3, 10, 0.1))
pars$loglike <- apply(pars, 1, myfun)
print(pars[which.max(pars$loglike),]) ## print the grid-search MLE to terminal
pars$in.CR <- (pars$loglike > fit$value - qchisq(0.95, 1) / 2)
library(ggplot2)
p1 <- ggplot(pars) + aes(x = mean, y = sd, fill = loglike) + geom_tile()
p1
p2 <- ggplot(pars) + aes(x = mean, y = sd, fill = in.CR) +geom_tile()
p2
